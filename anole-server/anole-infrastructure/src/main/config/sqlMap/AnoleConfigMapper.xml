<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.anole.infrastructure.dao.AnoleConfigMapper" >
  <resultMap id="BaseResultMap" type="org.anole.infrastructure.model.AnoleConfig" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="Key" property="key" jdbcType="VARCHAR" />
    <result column="Type" property="type" jdbcType="TINYINT" />
    <result column="Creator" property="creator" jdbcType="VARCHAR" />
    <result column="LastOperator" property="lastOperator" jdbcType="VARCHAR" />
    <result column="Project" property="project" jdbcType="VARCHAR" />
    <result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UpdateTime" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="Status" property="status" jdbcType="TINYINT" />
    <result column="Description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from anole_config
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.anole.infrastructure.model.AnoleConfig" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into anole_config (Key, Type, Creator, 
      LastOperator, Project, CreateTime, 
      UpdateTime, Status, Description
      )
    values (#{key,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{creator,jdbcType=VARCHAR}, 
      #{lastOperator,jdbcType=VARCHAR}, #{project,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="org.anole.infrastructure.model.AnoleConfig" >
    update anole_config
    set Key = #{key,jdbcType=VARCHAR},
      Type = #{type,jdbcType=TINYINT},
      Creator = #{creator,jdbcType=VARCHAR},
      LastOperator = #{lastOperator,jdbcType=VARCHAR},
      Project = #{project,jdbcType=VARCHAR},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      UpdateTime = #{updateTime,jdbcType=TIMESTAMP},
      Status = #{status,jdbcType=TINYINT},
      Description = #{description,jdbcType=LONGVARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select Id, Key, Type, Creator, LastOperator, Project, CreateTime, UpdateTime, Status, 
    Description
    from anole_config
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select Id, Key, Type, Creator, LastOperator, Project, CreateTime, UpdateTime, Status, 
    Description
    from anole_config
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select Id, Key, Type, Creator, LastOperator, Project, CreateTime, UpdateTime, Status, 
    Description
    from anole_config
    where Key = #{key,jdbcType=VARCHAR}
    AND
    Status = 1
  </select>
  
</mapper>